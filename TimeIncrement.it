Program (args) {
    timeIncrementEnv = new TaskEnvironment(name: "Time Increment")
    execute(task: "Time Increment"; environment: timeIncrementEnv; \
        initialize: args.size)
}

Task "Time Increment":
    Define:
        domain: 2d Array of Real double-precision
        dtcourant, dthydro, dtfixed, dtmax: Real double-precision
        time, deltatime, stoptime: Real double-precision
        deltatimemultlb, deltatimemultub: Real double-precision
        cycle, domainSize: Integer
    Environment:
        domain: link
    Initialize (size):
        domainSize = size
        time = 0.0
        stoptime = 0.01
        cycle = 0
        deltatime = 0
        dtmax = 0.01
        dtfixed = -0.000001
        deltatimemultlb = 1.1
        deltatimemultub = 1.2
        dtcourant = 0
        dthydro = 0
    Stages:
        timeIncrement(domain) {
            dtcourant = dtcourant + 0.000001
            dthydro = dthydro + 0.000001
            if (dtfixed < 0 && cycle != 0) {
                olddt = deltatime
                newdt = dtcourant / 2.0
                if (dthydro < newdt) {
                    newdt = dthydro * 2.0 / 3.0
                }
                ratio = newdt / olddt
                if (ratio > 1) {
                    if (ratio > deltatimemultlb) {
                        newdt = olddt
                    } else if (ratio > deltatimemultub) {
                        newdt = olddt * deltatimemultub
                    }
                }
                if (newdt > dtmax) {
                    newdt = dtmax
                }
            }
            deltatime = newdt
            time = time + deltatime
            cycle = cycle + 1
        }
    Computation:
	Space A {
                timeIncrement(domain)
        }
    Partition:
	Space A <un-partitioned> {
            domain
        }
